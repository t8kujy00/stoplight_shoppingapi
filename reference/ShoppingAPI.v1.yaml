openapi: 3.0.0
info:
  title: ShoppingAPI
  version: '1.0'
  description: 'API''s primary function is to serve as a platform for selling and buying used items. User is able to make posting which contains information like title, description, category, location, images, asking price, date of posting, delivery type and contact information.'
  contact:
    name: Support
    url: 'http://shoppingapi.org/api'
    email: shoppingapi@gmail.com
  termsOfService: 'http://shoppingapi.org/terms'
servers:
  - url: 'http://localhost:3000'
paths:
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
              required:
                - firstName
                - lastName
                - email
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
  /posting:
    post:
      summary: Create new posting
      operationId: post-posting
      responses:
        '200':
          description: OK
        '400':
          description: Missing required information.
      description: Selling posting created.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Title:
                  type: string
                Description:
                  type: string
                Category:
                  type: string
                Location:
                  type: string
                Images:
                  type: string
                Asking price:
                  type:
                    - string
                Delivery type:
                  type: string
                Contact information:
                  type:
                    - string
              required:
                - Title
                - Description
                - Category
                - Location
                - Images
                - Asking price
                - Delivery type
                - Contact information
            examples:
              New posting:
                value:
                  Title: Selling Trek Checkpoint ALR 4 bike
                  Description: Bike was bought a year ago and is in good condition
                  Category: Bikes
                  Location: Oulu
                  Images: bike.jpg
                  Asking price: 1200€
                  Delivery type: Pickup
                  Contact information: 'Matti Meikäläinen, Karjakatu 4, 90100 Oulu, 0441234567'
        description: Post the necessary fields for the API to create a new post.
    put:
      summary: Modify existing posting
      operationId: put-posting
      responses:
        '200':
          description: OK
      description: Existing postin modified.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Title:
                  type: string
                Description:
                  type: string
                Category:
                  type: string
                Location:
                  type: string
                Images:
                  type: string
                Asking price:
                  type:
                    - string
                    - number
                Delivery type:
                  type: string
                Contact information:
                  type:
                    - string
                    - number
    delete:
      summary: Delete posting
      operationId: delete-posting
      responses:
        '200':
          description: OK
      description: Delete existing posting.
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Delete post you made earlier.
  /posts/:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-posts
      description: List postings made by others.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Title:
                  type: string
                Description:
                  type: string
                Category:
                  type: string
                Location:
                  type: string
                Images:
                  type: string
                Asking price:
                  type:
                    - string
                    - number
                Date of posting:
                  type: string
                  format: date
                Delivery type:
                  type: string
                Contact information:
                  type:
                    - string
                    - number
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
  securitySchemes: {}
